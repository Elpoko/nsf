{"version":3,"sources":["../../src/use-popper.ts"],"names":["usePopper","props","placement","preventOverflow","fixed","flip","arrowSize","arrowShadowColor","gutter","arrowPadding","offset","matchWidth","modifiers","React","useState","referenceNode","setReferenceNode","popperNode","setPopperNode","arrowNode","setArrowNode","customMofidiers","useMemo","name","options","phase","enabled","element","padding","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","arrow","modifiersData","centerOffset","setAttribute","removeAttribute","popperJS","strategy","concat","finalPlacement","arrowStyles","popperArrowStyles","getReferenceProps","_ref","ref","getPopperProps","attributes","getArrowWrapperProps","getArrowProps","boxShadow","position","zIndex","height","transform","transformOrigin","forceUpdate","update"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetter } from \"@chakra-ui/utils\"\nimport type { Modifier, Placement } from \"@popperjs/core\"\nimport * as React from \"react\"\nimport { usePopper as useBasePopper } from \"react-popper\"\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  gutter?: number\n  placement?: Placement\n  offset?: [number, number]\n  preventOverflow?: boolean\n  fixed?: boolean\n  flip?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n  /**\n   * The distance of the arrow to its next border (numeric)\n   * E.g. arrowPadding = borderRadius * 2\n   */\n  arrowPadding?: number\n  matchWidth?: boolean\n  modifiers?: Modifier<string, any>[]\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset,\n    matchWidth,\n    modifiers = [],\n  } = props\n\n  const [\n    referenceNode,\n    setReferenceNode,\n  ] = React.useState<HTMLButtonElement | null>(null)\n  const [popperNode, setPopperNode] = React.useState<HTMLDivElement | null>(\n    null,\n  )\n  const [arrowNode, setArrowNode] = React.useState<HTMLDivElement | null>(null)\n\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n  const customMofidiers = React.useMemo<Partial<Modifier<any, unknown>>[]>(\n    () => [\n      // @see https://popper.js.org/docs/v2/modifiers/offset/\n      {\n        name: \"offset\",\n        options: {\n          offset: offset ?? [0, gutter],\n        },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n      {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/arrow/\n      {\n        name: \"arrow\",\n        enabled: !!arrowNode,\n        options: { element: arrowNode, padding: arrowPadding },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/flip/\n      {\n        name: \"flip\",\n        enabled: flip,\n        options: {\n          padding: 8,\n        },\n        phase: \"main\",\n      },\n      {\n        name: \"matchWidth\",\n        enabled: !!matchWidth,\n        phase: \"beforeWrite\",\n        requires: [\"computeStyles\"],\n        fn: ({ state }) => {\n          state.styles.popper.width = `${state.rects.reference.width}px`\n        },\n        effect: ({ state }) => () => {\n          const reference = state.elements.reference as HTMLElement\n          state.elements.popper.style.width = `${reference.offsetWidth}px`\n        },\n      },\n      {\n        name: \"applyArrowHide\",\n        enabled: true,\n        phase: \"write\",\n        fn({ state }) {\n          const { arrow } = state.elements\n          if (arrow) {\n            if (state.modifiersData.arrow?.centerOffset !== 0) {\n              arrow.setAttribute(\"data-hide\", \"\")\n            } else {\n              arrow.removeAttribute(\"data-hide\")\n            }\n          }\n        },\n      },\n    ],\n    [\n      arrowNode,\n      arrowPadding,\n      flip,\n      preventOverflow,\n      offset,\n      gutter,\n      matchWidth,\n    ],\n  )\n\n  const popperJS = useBasePopper(referenceNode, popperNode, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customMofidiers.concat(modifiers),\n  })\n\n  const finalPlacement = popperJS.state?.placement ?? placement\n\n  const arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize,\n  })\n\n  const getReferenceProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ref: mergeRefs(setReferenceNode, _ref),\n    }\n  }\n\n  const getPopperProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ...popperJS.attributes.popper,\n      ref: mergeRefs(setPopperNode, _ref),\n      style: { ...props.style, ...popperJS.styles?.popper },\n    }\n  }\n\n  const getArrowWrapperProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ...popperJS.attributes.arrow,\n      ref: mergeRefs(setArrowNode, _ref),\n      style: { ...props.style, ...arrowStyles },\n    }\n  }\n\n  const getArrowProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ref: _ref,\n      style: {\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor),\n        ...props.style,\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\",\n      },\n    }\n  }\n\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"file":"use-popper.js"}
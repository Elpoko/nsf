{"version":3,"sources":["../../src/menu.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","runIfFn","__DEV__","motion","React","MenuProvider","useMenu","useMenuButton","useMenuContext","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","useMenuPositioner","Menu","props","children","styles","ownProps","ctx","context","useMemo","isOpen","onClose","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","as","As","rest","buttonProps","ButtonComp","className","pointerEvents","flex","motionVariants","enter","visibility","opacity","scale","duration","ease","exit","transitionEnd","easings","Motion","div","MenuList","onTransitionEnd","listProps","positionerProps","zIndex","list","StyledMenuItem","type","undefined","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","otherProps","menuItemProps","shouldWrap","_children","CheckIcon","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","divider"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, MaybeRenderProp, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps {\n  children: MaybeRenderProp<{ isOpen: boolean; onClose(): void }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose } = context\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(children, { isOpen, onClose })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function StyledMenuButton(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.button\n        ref={ref}\n        {...props}\n        __css={{\n          display: \"inline-flex\",\n          appearance: \"none\",\n          alignItems: \"center\",\n          outline: 0,\n          transition: \"all 250ms\",\n          ...styles.button,\n        }}\n      />\n    )\n  },\n)\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function MenuButton(props, ref) {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const ButtonComp = As || StyledMenuButton\n\n    return (\n      <ButtonComp\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{\n            pointerEvents: \"none\",\n            flex: \"1 1 auto\",\n          }}\n        >\n          {props.children}\n        </chakra.span>\n      </ButtonComp>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const listProps = useMenuList(props, ref)\n  const positionerProps = useMenuPositioner()\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div {...positionerProps} __css={{ zIndex: styles.list?.zIndex }}>\n      <Motion\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  function StyledMenuItem(props, ref) {\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const type = props.as ? props.type ?? undefined : \"button\"\n\n    return (\n      <chakra.button\n        ref={ref}\n        type={type}\n        {...props}\n        __css={{\n          textDecoration: \"none\",\n          color: \"inherit\",\n          userSelect: \"none\",\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n          flex: \"0 0 auto\",\n          outline: 0,\n          ...styles.item,\n        }}\n      />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">(function MenuItem(\n  props,\n  ref,\n) {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    children,\n    ...otherProps\n  } = props\n\n  const menuItemProps = useMenuItem(otherProps, ref)\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuItemProps}\n      className={cx(\"chakra-menu__menuitem\", menuItemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" mr={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && <MenuCommand>{command}</MenuCommand>}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  icon?: React.ReactElement\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  function MenuItemOption(props, ref) {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref)\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          mr={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <chakra.span flex=\"1\">{optionProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">(function MenuGroup(\n  props,\n  ref,\n) {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  function MenuCommand(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}
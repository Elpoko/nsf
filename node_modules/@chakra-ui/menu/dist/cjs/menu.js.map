{"version":3,"sources":["../../src/menu.tsx"],"names":["Menu","props","children","styles","ownProps","ctx","context","React","useMemo","isOpen","onClose","__DEV__","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","As","as","rest","buttonProps","ButtonComp","className","pointerEvents","flex","motionVariants","enter","visibility","opacity","scale","duration","ease","exit","transitionEnd","easings","Motion","motion","div","MenuList","onTransitionEnd","listProps","positionerProps","zIndex","list","StyledMenuItem","type","undefined","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","otherProps","menuItemProps","shouldWrap","_children","CheckIcon","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","divider"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, MaybeRenderProp, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps {\n  children: MaybeRenderProp<{ isOpen: boolean; onClose(): void }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose } = context\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(children, { isOpen, onClose })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function StyledMenuButton(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.button\n        ref={ref}\n        {...props}\n        __css={{\n          display: \"inline-flex\",\n          appearance: \"none\",\n          alignItems: \"center\",\n          outline: 0,\n          transition: \"all 250ms\",\n          ...styles.button,\n        }}\n      />\n    )\n  },\n)\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  function MenuButton(props, ref) {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const ButtonComp = As || StyledMenuButton\n\n    return (\n      <ButtonComp\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{\n            pointerEvents: \"none\",\n            flex: \"1 1 auto\",\n          }}\n        >\n          {props.children}\n        </chakra.span>\n      </ButtonComp>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const listProps = useMenuList(props, ref)\n  const positionerProps = useMenuPositioner()\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div {...positionerProps} __css={{ zIndex: styles.list?.zIndex }}>\n      <Motion\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  function StyledMenuItem(props, ref) {\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const type = props.as ? props.type ?? undefined : \"button\"\n\n    return (\n      <chakra.button\n        ref={ref}\n        type={type}\n        {...props}\n        __css={{\n          textDecoration: \"none\",\n          color: \"inherit\",\n          userSelect: \"none\",\n          display: \"flex\",\n          width: \"100%\",\n          alignItems: \"center\",\n          textAlign: \"left\",\n          flex: \"0 0 auto\",\n          outline: 0,\n          ...styles.item,\n        }}\n      />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">(function MenuItem(\n  props,\n  ref,\n) {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    children,\n    ...otherProps\n  } = props\n\n  const menuItemProps = useMenuItem(otherProps, ref)\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuItemProps}\n      className={cx(\"chakra-menu__menuitem\", menuItemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" mr={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && <MenuCommand>{command}</MenuCommand>}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  icon?: React.ReactElement\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  function MenuItemOption(props, ref) {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref)\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          mr={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <chakra.span flex=\"1\">{optionProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">(function MenuGroup(\n  props,\n  ref,\n) {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  function MenuCommand(props, ref) {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}